{"version":3,"sources":["DisplayComponents/TitleNav.Component.js","GameComponents/DataDisplay.Component.js","Helpers/Functions.js","GameComponents/CellState0.Component.js","GameComponents/CellState1.Component.js","GameComponents/CellState2.Component.js","GameComponents/CellState3.Component.js","GameComponents/Cell.Component.js","GameComponents/AddCell.Component.js","GameComponents/MineGrid.Component.js","GameComponents/Asset.Component.js","GameComponents/Tab.Component.js","GameComponents/AddMenu.Component.js","ScreenComponents/Main.Component.js","InventoryComponents/BannerTitle.Component.js","InventoryComponents/Cash.Component.js","InventoryComponents/Tile.Component.js","InventoryComponents/TileGrid.Component.js","ScreenComponents/Inventory.Component.js","MockData/user2.js","App.js","serviceWorker.js","index.js"],"names":["TitleNav","className","to","DataDisplay","this","props","openInventory","cash","toString","replace","x","length","slice","console","log","functions","onClick","bind","Component","CellState0","start","index","data","type","CellState1","progress","found","CellState2","collectItems","CellState3","Cell","cell","state","AddCell","openAddMenu","MineGrid","cellsOpen","map","cellData","i","key","getCells","Tab","addCell","rowClassNames","undefined","level","id","cost","assets","assetData","getAssets","AddMenu","userdata","materialAssets","estateAssets","push","exitAddMenu","Main","isAddMenuOpen","setState","MainComponentsClassNames","AddMenuComponentClassNames","BannerTitle","Cash","Tile","tileData","quantity","TileGrid","items","getTiles","Inventory","page","getUserData2","username","temp","getMockItems","getMockAssets","App","price","currUserData","sleep","ms","Promise","resolve","setTimeout","name","value","currUserItems","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8fe8377a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nimport './TitleNav.css';\r\n\r\n// Use Stateless Function for Title and Nav Ribbon\r\nfunction TitleNav() {\r\n    return (\r\n      <div className=\"TitleNav\">   \r\n        <div className=\"wrapper\"> \r\n            <div className=\"col Padding\"> \r\n                <div></div>\r\n            </div>\r\n            <div className=\"col Title\"> \r\n                <Link to={'/'}><div> U L T R A  W E A L T H </div></Link>\r\n            </div>\r\n            <div className=\"col MenuBtn\"> \r\n                <div className=\"hamburger\"> ☰ </div>\r\n            </div>\r\n        </div>     \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TitleNav;","import React, {Component} from 'react';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nimport './DataDisplay.css';\r\n\r\nimport * as functions from '../Helpers/Functions';\r\n\r\n//@TODO: Move buttons out into separate component, makes no sense to have it within DataDisplay component\r\n\r\nexport default class DataDisplay extends Component  {\r\n\r\n  // this.props.cash\r\n  // this.props.openInventory\r\n\r\n  openInventory(){\r\n    this.props.openInventory();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"DataDisplay\">\r\n        <div className=\"DataDisplay-1Data\">\r\n          <ul className=\"DataDisplay-1Data-ul\">\r\n            <li className=\"cash\">\r\n                <div className=\"DataDisplay-Header\">Cash</div>\r\n                <div className=\"DataDisplay-Figure\">${functions.numberWithCommas(this.props.cash)}</div> \r\n                <div className=\"DataDisplay-Figure\">${functions.convertLongNum(this.props.cash)}</div> \r\n                <div className=\"DataDisplay-Figure2\"> +$500 (+5.04%) </div>\r\n            </li>\r\n          </ul>\r\n        </div>        \r\n        <div className=\"DataDisplay-2Buttons\">\r\n          <ul className=\"DataDisplay-2Buttons-ul\">\r\n            <li><Link to={'/inventory'}><button className=\"DataDisplay-btn\" onClick={this.openInventory.bind(this)}> Inventory </button></Link></li>\r\n            <li><button className=\"DataDisplay-btn\"> Equips </button></li>\r\n            <li><button className=\"DataDisplay-btn\"> Assets </button></li>\r\n            <li><button className=\"DataDisplay-btn\"> SHOP </button></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function checkImport(){\r\n    console.log(\">> Helper/Functions correctly loaded\");\r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport function convertLongNum(x){\r\n    \r\n    if(x < 1000){\r\n        return x;\r\n    }\r\n\r\n    x = x.toString();\r\n\r\n    switch(x.length){\r\n        case(4): // 1,000\r\n            x = x[0] + \"k\";\r\n            break;\r\n        case(5): // 20,000\r\n            x = x.slice(0,2) + \"k\";\r\n            break;\r\n        case(6): // 300,000\r\n            x = x.slice(0,3) + \"k\";\r\n            break;\r\n        case(7): // 4,000,000\r\n            x = x[0] + \"m\";\r\n            break;\r\n        case(8): // 50,000,000\r\n            x = x.slice(0,2) + \"m\";\r\n            break;\r\n        case(9): // 600,000,000\r\n            x = x.slice(0,3) + \"m\";\r\n            break;\r\n        case(10): // 7,000,000,000\r\n            x = x[0] + \"b\";\r\n            break;\r\n        case(11): // 70,000,000,000\r\n            x = x.slice(0,2) + \"b\";\r\n            break;\r\n        case(12): // 700,000,000,000\r\n            x = x.slice(0,3) + \"b\";\r\n            break;\r\n        case(13): // 7,000,000,000,000\r\n            x = x[0] + \"T\";\r\n            break;\r\n        default:\r\n            x=\"UltraCash\";\r\n            console.log(\">> Number too Large / Invalid number\");\r\n            break;\r\n    }\r\n\r\n    return x;\r\n}","import React, {Component} from 'react';\r\n\r\nimport './Cell.css';\r\n\r\nexport default class CellState0 extends Component  {\r\n\r\n  // this.props.data.{type, state, progress, found}\r\n  // this.props.index\r\n  // this.props.start\r\n\r\n  start(){\r\n    this.props.start(this.props.index, 1000);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"CellState0\"> \r\n        <div className=\"CellState0-Type\"> {this.props.data.type} </div>\r\n        <div className=\"CellState0-Btn\"> \r\n          <button className=\"StartBtn\" onClick={this.start.bind(this)}>\r\n            START \r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Cell.css';\r\n\r\nexport default class CellState1 extends Component  {\r\n  render(){\r\n    return (\r\n      <div className=\"CellState1\"> \r\n        <div className=\"CellState1-Type\"> {this.props.data.type} </div>\r\n\r\n        <div className=\"CellState1-Status\">\r\n          <div className=\"progressCircle-Outer-Animation\">\r\n            <div className=\"progressCircle\"> \r\n              <div className=\"CellState1-progressText\"> {this.props.data.progress}% </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"CellState1-Info\"> \r\n          <div className=\"CellState1-foundText\"> \r\n            <span className=\"CellState1-foundText1\"> FOUND </span> \r\n            <span className=\"CellState1-foundText2\"> {this.props.data.found} </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Cell.css';\r\n\r\nexport default class CellState2 extends Component  {\r\n\r\n  // this.props.data.{type, state, progress, found}\r\n  // this.props.index\r\n  // this.props.collectItems\r\n\r\n  collectItems(){\r\n    this.props.collectItems(this.props.index, this.props.data.type, this.props.data.found);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"CellState2\"> \r\n        <div className=\"CellState2-Type\"> {this.props.data.type} </div>\r\n\r\n          <div className=\"CellState2-Status\">\r\n              <div className=\"progressCircle2\"> \r\n                <div className=\"CellState2-progressText\"> {this.props.data.progress}% </div>\r\n              </div>\r\n          </div>\r\n\r\n          <div className=\"CellState2-Info\"> \r\n            <div className=\"CellState2-collectText\" onClick={this.collectItems.bind(this)}> \r\n              <span className=\"CellState2-collectText1\"> COLLECT </span> \r\n              <span className=\"CellState2-collectText2\"> {this.props.data.found} </span>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Cell.css';\r\n\r\nexport default class CellState3 extends Component  {\r\n  render(){\r\n    return (\r\n      <div className=\"CellState3\"> \r\n        <div className=\"CellState3-Type\"> {this.props.data.type} </div>\r\n        <div className=\"CellState3-Warning\"> Axe must be equipped / More Gold is required </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport CellState0 from './CellState0.Component';\r\nimport CellState1 from './CellState1.Component';\r\nimport CellState2 from './CellState2.Component';\r\nimport CellState3 from './CellState3.Component';\r\n\r\nimport './Cell.css';\r\n\r\nexport default class Cell extends Component  {\r\n  \r\n  // this.props.data.{type, state, progress, found}\r\n  // this.props.key = index of that data in openCells[] // cant use as props\r\n  // this.props.index = index of that data in openCells[] // so use this instead\r\n  // this.props.start = start() mining in App.js\r\n\r\n  render(){\r\n    let cell;\r\n\r\n    switch(this.props.data.state){\r\n      case 0:\r\n        cell = <CellState0 data={this.props.data} index={this.props.index} start={this.props.start} />\r\n        break;\r\n      case 1:\r\n        cell = <CellState1 data={this.props.data} />\r\n        break;\r\n      case 2:\r\n        cell = <CellState2 data={this.props.data} index={this.props.index} collectItems={this.props.collectItems} />\r\n        break;\r\n      case 3:\r\n        cell = <CellState3 data={this.props.data} />\r\n        break;\r\n      default:\r\n        console.log(\"> That State does not exist\");\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"Cell\"> \r\n        {cell}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './AddCell.css';\r\n\r\nexport default class AddCell extends Component{\r\n  render(){\r\n    return (\r\n      <div className=\"AddCell\">   \r\n        <div className=\"AddCellWrapper\"> \r\n          <div className=\"thePlus\" onClick={this.props.openAddMenu} > + </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\n\r\nimport './MineGrid.css';\r\n\r\nimport Cell from './Cell.Component';\r\nimport AddCell from './AddCell.Component';\r\n\r\nexport default class MineGrid extends Component  {\r\n\r\n  //this.props.cellsOpen.[cellData.{type, status etc}]\r\n  //this.props.start\r\n  //this.props.collectItems\r\n  //this.props.openAddMenu\r\n  \r\n  getCells(){\r\n    return this.props.cellsOpen.map((cellData, i) => { // Needs to be a arrow function to access this.props (if we use function() then 'this' is binded to that function, not globular)\r\n        return <Cell \r\n        data={cellData} \r\n        key={i}\r\n        index={i}\r\n        start={this.props.start} \r\n        collectItems={this.props.collectItems}\r\n        />;\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"MineGrid\">\r\n        <div className=\"MineGrid-wrapper field\">\r\n         {this.getCells()}\r\n         <div> <AddCell openAddMenu={this.props.openAddMenu} /> </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Asset.css';\r\n\r\nexport default class Tab extends Component  {\r\n  \r\n  // this.props.data.{type, id, cost, level}\r\n  // this.props.key\r\n  // this.props.index\r\n  // this.props.addCell\r\n\r\n  addCell(data){    \r\n    this.props.addCell(data);\r\n  }\r\n\r\n  render(){\r\n    let data, rowClassNames=\"asset-row\";\r\n    if(this.props.data!==undefined){\r\n        data = this.props.data;\r\n\r\n        if(data.type === \"material\"){\r\n            rowClassNames += \" asset-row-material\"\r\n        }\r\n\r\n        if(data.type === \"estate\"){\r\n            rowClassNames += \" asset-row-estate\"\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div className={rowClassNames}>\r\n          <div>{data.level}</div>\r\n          <div>{data.id}</div>\r\n          <div><span className=\" AddAssetButton\" onClick={this.addCell.bind(this, data)}>+</span></div>\r\n          <div>{data.cost}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Tab.css'\r\n\r\nimport Asset from'./Asset.Component';\r\n\r\nexport default class Tab extends Component  {\r\n  \r\n  // this.props.type\r\n  // this.props.assets[].{type, id, cost, level}\r\n\r\n  getAssets(){\r\n    return this.props.assets.map((assetData, i) => {\r\n        return <Asset \r\n        data={assetData} \r\n        key={i}\r\n        index={i}\r\n        addCell={this.props.addCell}\r\n        />;\r\n    });\r\n  }\r\n\r\n  render(){\r\n    let assets;\r\n    if(this.props.assets !== undefined) assets = this.getAssets();\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"tab\"> \r\n          <div className=\"skill\">{this.props.type}</div>\r\n          <div className=\"dropdownArrow\">▾</div>\r\n        </div>\r\n        \r\n        <div className=\"assetList\">\r\n            <div className=\"assetListHeader\">\r\n                <div className=\"asset-row-header\">L E V E L</div>\r\n                <div className=\"asset-row-header\">A S S E T</div>\r\n                <div className=\"asset-row-header\"></div>\r\n                <div className=\"asset-row-header\">C O S T</div>\r\n            </div>\r\n\r\n            <div>{assets}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './AddMenu.css';\r\n\r\nimport Tab from './Tab.Component';\r\n\r\nexport default class AddMenu extends Component  {\r\n  \r\n  // this.props.userdata.{username, cash, level, cellsOpen, items, assets}\r\n\r\n  render(){\r\n    let assets = this.props.userdata.assets;\r\n    let materialAssets = [];\r\n    let estateAssets = [];\r\n\r\n    for(let i = 0; i < assets.length; i++){\r\n        switch(assets[i].type){\r\n            case \"material\":\r\n                materialAssets.push(assets[i]);\r\n                break;\r\n            case \"estate\":\r\n                estateAssets.push(assets[i]);\r\n                break;\r\n            default:\r\n                console.log(\">> That Asset Type does not exist\");\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div className=\"AddMenu\"> \r\n        <div className=\"top\">\r\n          <div className=\"title\">My Assets</div>\r\n          <div className=\"exit\" onClick={this.props.exitAddMenu}>✕</div>\r\n        </div>\r\n        <div className=\"mid\">\r\n          <Tab type=\"History\" addCell={this.props.addCell} />\r\n          <Tab type=\"Material Skills\" assets={materialAssets} addCell={this.props.addCell} />\r\n          <Tab type=\"Estate Skills\" assets={estateAssets} addCell={this.props.addCell} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Main.css';\r\n\r\nimport TitleNav from '../DisplayComponents/TitleNav.Component';\r\nimport DataDisplay from '../GameComponents/DataDisplay.Component';\r\nimport MineGrid from '../GameComponents/MineGrid.Component';\r\nimport AddMenu from '../GameComponents/AddMenu.Component';\r\n\r\nexport default class Main extends Component  {\r\n\r\n  //this.props.openInventory\r\n\r\n  //this.props.userdata.{username, cash etc} \r\n  //this.props.addCell\r\n  //this.props.start\r\n  //this.props.collectItems\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      isAddMenuOpen: false\r\n    }\r\n  }\r\n\r\n  openAddMenu(){\r\n    this.setState({isAddMenuOpen: true});\r\n  }\r\n\r\n  exitAddMenu(){\r\n    this.setState({isAddMenuOpen: false});\r\n  }\r\n\r\n  render(){\r\n\r\n    \r\n    let MainComponentsClassNames = \"MainComponents\";\r\n    let AddMenuComponentClassNames = \"HideAddMenuComponent\";\r\n    let TitleNavComponentClassNames = \"TitleNavComponent\";\r\n\r\n    if(this.state.isAddMenuOpen){\r\n      MainComponentsClassNames = \"HideMainComponents\";\r\n      AddMenuComponentClassNames = \"AddMenuComponent\";\r\n    }\r\n    else{\r\n      MainComponentsClassNames = \"MainComponents\";\r\n      AddMenuComponentClassNames = \"HideAddMenuComponent\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"Main\">\r\n        <div className={TitleNavComponentClassNames}>\r\n          <TitleNav \r\n          />\r\n        </div>\r\n\r\n        <div className={MainComponentsClassNames}>\r\n          <DataDisplay \r\n          cash={this.props.userdata.cash}\r\n          openInventory={this.props.openInventory}\r\n          />\r\n          \r\n          <MineGrid \r\n          cellsOpen={this.props.userdata.cellsOpen}\r\n          start={this.props.start}\r\n          collectItems={this.props.collectItems}\r\n          openAddMenu={this.openAddMenu.bind(this)}\r\n          />\r\n        </div>\r\n\r\n        <div className={AddMenuComponentClassNames}>\r\n          <AddMenu\r\n          userdata={this.props.userdata}\r\n          exitAddMenu={this.exitAddMenu.bind(this)}\r\n          addCell={this.props.addCell}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './BannerTitle.css';\r\n\r\nexport default function BannerTitle() {\r\n    return (\r\n      <div className=\"BannerTitle\">\r\n        <ul className=\"BannerTitle-ul\">\r\n            <li className=\"BannerTitle-letter\">I</li>\r\n            <li className=\"BannerTitle-letter\">N</li>\r\n            <li className=\"BannerTitle-letter\">V</li>\r\n            <li className=\"BannerTitle-letter\">E</li>\r\n            <li className=\"BannerTitle-letter\">N</li>\r\n            <li className=\"BannerTitle-letter\">T</li>\r\n            <li className=\"BannerTitle-letter\">O</li>\r\n            <li className=\"BannerTitle-letter\">R</li>\r\n            <li className=\"BannerTitle-letter\">Y</li>\r\n        </ul>\r\n      </div>\r\n    ); \r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Cash.css';\r\n\r\n// this.props.userdata.{data, username, cash, level, cellsOpen, items}\r\n\r\nexport default class Cash extends Component  {\r\n  render(){\r\n    return (\r\n      <div className=\"Cash\">\r\n        Cash ${this.props.userdata.cash}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Tile.css';\r\n\r\n// this.props.tileData.{id, quantity}\r\n\r\nexport default class Tile extends Component  {\r\n  render(){\r\n    return (\r\n      <div className=\"Tile\">\r\n        <div className=\"item-name\"> {this.props.tileData.id} </div>\r\n        <div className=\"item-amount\"> {this.props.tileData.quantity} </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './TileGrid.css';\r\n\r\nimport Tile from './Tile.Component';\r\n\r\n// this.props.userdata.{data, username, cash, level, cellsOpen, items}\r\n\r\nexport default class TileGrid extends Component  {\r\n\r\n  getTiles(){\r\n    return this.props.userdata.items.map((tileData, i) => {\r\n        return <Tile\r\n        tileData={tileData}\r\n        key={i}\r\n        index={i}\r\n        />\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"TileGrid\">\r\n        <div className=\"TileGridTitle\"> Items  | Total {this.props.userdata.items.length}</div>\r\n        {this.getTiles()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport TitleNav from '../DisplayComponents/TitleNav.Component';\r\nimport BannerTitle from '../InventoryComponents/BannerTitle.Component';\r\nimport Cash from '../InventoryComponents/Cash.Component';\r\nimport TileGrid from '../InventoryComponents/TileGrid.Component';\r\n\r\n// this.props.userdata = {data, username, cash, level, cellsOpen, items}\r\n\r\nexport default class Inventory extends Component  {\r\n  render(){\r\n    return (\r\n      <div className=\"Inventory\">\r\n        <TitleNav page={\"Inventory\"}/>\r\n        <BannerTitle />\r\n        <Cash userdata={this.props.userdata} />\r\n        <TileGrid userdata={this.props.userdata} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","function getUserData2(){\r\n    let data = {\r\n        username: \"ambushnike\",\r\n        cash: 8000000000000,\r\n        level: 1,\r\n        cellsOpen: [],\r\n        items: [],\r\n        assets: []\r\n    };\r\n\r\n    data.items = getMockItems();\r\n    data.assets = getMockAssets();\r\n\r\n    return data;\r\n}\r\n\r\nfunction getMockItems(){\r\n    let temp = [];\r\n\r\n    temp.push({\r\n        id: \"GOLD\",\r\n        quantity: 0\r\n    });\r\n    \r\n    temp.push({\r\n        id: \"WWWW\",\r\n        quantity: 500\r\n    });\r\n\r\n    temp.push({\r\n        id: \"OOOO\",\r\n        quantity: 20\r\n    });\r\n\r\n    temp.push({\r\n        id: \"TSLA\",\r\n        quantity: 1\r\n    });\r\n\r\n    temp.push({\r\n        id: \"C\",\r\n        quantity: 0\r\n    });\r\n    \r\n    temp.push({\r\n        id: \"COS\",\r\n        quantity: 327\r\n    });\r\n\r\n    temp.push({\r\n        id: \"FB\",\r\n        quantity: \"75m\"\r\n    });\r\n\r\n    temp.push({\r\n        id: \"NFLX\",\r\n        quantity: \"890k\"\r\n    });\r\n\r\n    return temp;\r\n}\r\n\r\nfunction getMockAssets(){\r\n    let temp = [];\r\n\r\n    temp.push({\r\n        type: \"material\",\r\n        id: \"GOLD\",\r\n        cost: 200,\r\n        level: 1\r\n    });\r\n\r\n    temp.push({\r\n        type: \"material\",\r\n        id: \"POW\",\r\n        cost: 2000,\r\n        level: 12\r\n    });\r\n\r\n    temp.push({\r\n        type: \"estate\",\r\n        id: \"HOME\",\r\n        cost: 20000,\r\n        level: 1\r\n    });\r\n\r\n    temp.push({\r\n        type: \"estate\",\r\n        id: \"RESO\",\r\n        cost: \"800m\",\r\n        level: 102\r\n    });\r\n\r\n    return temp;\r\n}\r\n\r\nexport default getUserData2;","import React, {Component} from 'react';\nimport './App.css';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from './ScreenComponents/Main.Component';\nimport Inventory from './ScreenComponents/Inventory.Component';\n\n// Mock Data\nimport getUserData from './MockData/user1';\nimport getUserData2 from './MockData/user2';\n\nexport default class App extends Component  {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      userdata: getUserData2()\n    }\n  }\n\n  async start(index, price){\n    let currUserData = this.state.userdata;\n\n    // Pay price to do a mining job\n    currUserData.cash -= price;\n\n    // Mining state so set to state 1\n    currUserData.cellsOpen[index].state = 1;\n     \n    //// Support Function for mock scenario\n    let sleep = (ms) => {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    //// Mocking a mining scenario\n    for (let i = 0; i <= 100; i++) {\n        if (i !== 0) await sleep(10); //@TODO Random Time Range for WOOD\n        currUserData.cellsOpen[index].progress = i;\n        currUserData.cellsOpen[index].found = i*8; // @TODO Random Num Range for WOOD\n        this.setState({userdata: currUserData});\n    }\n\n    // Finnished mining so set state to 2\n    currUserData.cellsOpen[index].state = 2;\n    this.setState({userdata: currUserData});\n  }\n\n  addCell(data){\n    let currUserData = this.state.userdata;\n\n    currUserData.cellsOpen.push({\n      type: data.id,\n      state: 0,\n      progress: 0,\n      found: 0\n    });\n\n    currUserData.cash -= data.cost;\n    \n    this.setState({userdata: currUserData});\n  }\n\n  openInventory(){\n    console.log(\"Inventory Open\");\n  }\n\n  collectItems(index, name, value){\n    // Add value to inventory items to that item, 'name'\n    let currUserData = this.state.userdata;\n    let currUserItems = currUserData.items;\n\n    for(let i = 0; i < currUserItems.length; i++){\n      if(currUserItems[i].id === name) currUserItems[i].quantity += value;\n    }\n\n    // Reset index cell to state 0\n    let currUserCellsOpen = currUserData.cellsOpen;\n    currUserCellsOpen[index].state = 0;\n\n    // Update App state with new user details\n    this.setState({userdata: currUserData});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <Switch>\n\n            <Route \n            exact path='/' \n            component={ \n              () => \n              <Main \n              openInventory={this.openInventory.bind(this)}\n\n              userdata={this.state.userdata} \n              start={this.start.bind(this)}\n              collectItems={this.collectItems.bind(this)}\n              addCell={this.addCell.bind(this)} \n              /> \n            } \n            />\n\n            <Route \n            exact path='/inventory' \n            component={ \n              () => \n              <Inventory \n              userdata={this.state.userdata}\n              /> \n            } \n            />\n\n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}