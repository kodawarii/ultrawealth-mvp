{"version":3,"sources":["DisplayComponents/TitleNav.Component.js","GameComponents/DataDisplay.Component.js","Helpers/Functions.js","GameComponents/CellState0.Component.js","GameComponents/CellState1.Component.js","GameComponents/CellState2.Component.js","GameComponents/CellState3.Component.js","GameComponents/Cell.Component.js","GameComponents/AddCell.Component.js","GameComponents/MineGrid.Component.js","GameComponents/Asset.Component.js","GameComponents/Tab.Component.js","GameComponents/AddMenu.Component.js","GameComponents/EnrichMenu.Component.js","ScreenComponents/Main.Component.js","InventoryComponents/BannerTitle.Component.js","InventoryComponents/Cash.Component.js","InventoryComponents/Tile.Component.js","InventoryComponents/TileGrid.Component.js","ScreenComponents/Inventory.Component.js","MockData/user2.js","App.js","serviceWorker.js","index.js"],"names":["TitleNav","className","to","DataDisplay","this","props","cash","toString","replace","x","length","slice","console","log","functions","Component","CellState0","start","index","data","amountInvested","type","onClick","bind","CellState1","progress","found","CellState2","collectItems","CellState3","Cell","cell","state","AddCell","openAddMenu","MineGrid","cellsOpen","map","cellData","i","key","getCells","Tab","addCell","openEnrichMenu","addToCart","rowClassNames","undefined","level","id","cost","selectAsset","assets","assetData","getAssets","AddMenu","userdata","materialAssets","estateAssets","push","exitAddMenu","EnrichMenu","amountToInvest","curr","dataList","setState","removeFromCart","exitEnrichMenu","isPlusDisabled","isMinusDisabled","removeFromCartBACK","removeFromCartEXIT","minusInvest","disabled","plusInvest","Main","cart","isAddMenuOpen","isEnrichMenuOpen","list","MainComponentsClassNames","AddMenuComponentClassNames","EnrichMenuComponentClassNames","BannerTitle","Cash","Tile","tileData","quantity","TileGrid","items","getTiles","Inventory","page","getUserData2","username","temp","getMockItems","getMockAssets","App","price","currUserData","sleep","ms","Promise","resolve","setTimeout","name","value","currUserItems","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1013ca56.chunk.js","sourcesContent":["import React from 'react';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nimport './TitleNav.css';\r\n\r\n// Use Stateless Function for Title and Nav Ribbon\r\nfunction TitleNav() {\r\n    return (\r\n      <div className=\"TitleNav\">   \r\n        <div className=\"wrapper\"> \r\n            <div className=\"col Padding\"> \r\n                <div></div>\r\n            </div>\r\n            <div className=\"col Title\"> \r\n                <Link to={'/'}><div> U L T R A  W E A L T H </div></Link>\r\n            </div>\r\n            <div className=\"col MenuBtn\"> \r\n                <div className=\"hamburger\"> ☰ </div>\r\n            </div>\r\n        </div>     \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TitleNav;","import React, {Component} from 'react';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nimport './DataDisplay.css';\r\n\r\nimport * as functions from '../Helpers/Functions';\r\n\r\n//@TODO: Move buttons out into separate component, makes no sense to have it within DataDisplay component\r\n\r\nexport default class DataDisplay extends Component  {\r\n\r\n  // this.props.cash\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"DataDisplay\">\r\n        <div className=\"DataDisplay-1Data\">\r\n          <ul className=\"DataDisplay-1Data-ul\">\r\n            <li className=\"cash\">\r\n                <div className=\"DataDisplay-Header\">Cash</div>\r\n                <div className=\"DataDisplay-Figure\">${functions.numberWithCommas(this.props.cash)}</div> \r\n                <div className=\"DataDisplay-Figure\">${functions.convertLongNum(this.props.cash)}</div> \r\n                <div className=\"DataDisplay-Figure2\"> +$500 (+5.04%) </div>\r\n            </li>\r\n          </ul>\r\n        </div>        \r\n        <div className=\"DataDisplay-2Buttons\">\r\n          <ul className=\"DataDisplay-2Buttons-ul\">\r\n            <li><Link to={'/inventory'}><button className=\"DataDisplay-btn\"> Inventory </button></Link></li>\r\n            <li><button className=\"DataDisplay-btn\"> Equips </button></li>\r\n            <li><button className=\"DataDisplay-btn\"> Assets </button></li>\r\n            <li><button className=\"DataDisplay-btn\"> SHOP </button></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function checkImport(){\r\n    console.log(\">> Helper/Functions correctly loaded\");\r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport function convertLongNum(x){\r\n    \r\n    if(x < 1000){\r\n        return x;\r\n    }\r\n\r\n    x = x.toString();\r\n\r\n    switch(x.length){\r\n        case(4): // 1,000\r\n            x = x[0] + \"k\";\r\n            break;\r\n        case(5): // 20,000\r\n            x = x.slice(0,2) + \"k\";\r\n            break;\r\n        case(6): // 300,000\r\n            x = x.slice(0,3) + \"k\";\r\n            break;\r\n        case(7): // 4,000,000\r\n            x = x[0] + \"m\";\r\n            break;\r\n        case(8): // 50,000,000\r\n            x = x.slice(0,2) + \"m\";\r\n            break;\r\n        case(9): // 600,000,000\r\n            x = x.slice(0,3) + \"m\";\r\n            break;\r\n        case(10): // 7,000,000,000\r\n            x = x[0] + \"b\";\r\n            break;\r\n        case(11): // 70,000,000,000\r\n            x = x.slice(0,2) + \"b\";\r\n            break;\r\n        case(12): // 700,000,000,000\r\n            x = x.slice(0,3) + \"b\";\r\n            break;\r\n        case(13): // 7,000,000,000,000\r\n            x = x[0] + \"T\";\r\n            break;\r\n        default:\r\n            x=\"UltraCash\";\r\n            console.log(\">> Number too Large / Invalid number\");\r\n            break;\r\n    }\r\n\r\n    return x;\r\n}","import React, {Component} from 'react';\r\n\r\nimport './Cell.css';\r\n\r\nexport default class CellState0 extends Component  {\r\n\r\n  // Cell Schema: this.props.data.{class, type, state, progress, found, amountInvested}\r\n  // this.props.index\r\n  // this.props.start\r\n\r\n  start(){\r\n    this.props.start(this.props.index, this.props.data.amountInvested);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"CellState0\"> \r\n        <div className=\"CellState0-Type\"> {this.props.data.type} </div>\r\n        <div className=\"CellState0-Btn\"> \r\n          <button className=\"StartBtn\" onClick={this.start.bind(this)}>\r\n            START \r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Cell.css';\r\n\r\nexport default class CellState1 extends Component  {\r\n  render(){\r\n    return (\r\n      <div className=\"CellState1\"> \r\n        <div className=\"CellState1-Type\"> {this.props.data.type} </div>\r\n\r\n        <div className=\"CellState1-Status\">\r\n          <div className=\"progressCircle-Outer-Animation\">\r\n            <div className=\"progressCircle\"> \r\n              <div className=\"CellState1-progressText\"> {this.props.data.progress}% </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"CellState1-Info\"> \r\n          <div className=\"CellState1-foundText\"> \r\n            <span className=\"CellState1-foundText1\"> FOUND </span> \r\n            <span className=\"CellState1-foundText2\"> {this.props.data.found} </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Cell.css';\r\n\r\nexport default class CellState2 extends Component  {\r\n\r\n  // this.props.data.{type, state, progress, found}\r\n  // this.props.index\r\n  // this.props.collectItems\r\n\r\n  collectItems(){\r\n    this.props.collectItems(this.props.index, this.props.data.type, this.props.data.found);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"CellState2\"> \r\n        <div className=\"CellState2-Type\"> {this.props.data.type} </div>\r\n\r\n          <div className=\"CellState2-Status\">\r\n              <div className=\"progressCircle2\"> \r\n                <div className=\"CellState2-progressText\"> {this.props.data.progress}% </div>\r\n              </div>\r\n          </div>\r\n\r\n          <div className=\"CellState2-Info\"> \r\n            <div className=\"CellState2-collectText\" onClick={this.collectItems.bind(this)}> \r\n              <span className=\"CellState2-collectText1\"> COLLECT </span> \r\n              <span className=\"CellState2-collectText2\"> {this.props.data.found} </span>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Cell.css';\r\n\r\nexport default class CellState3 extends Component  {\r\n  render(){\r\n    return (\r\n      <div className=\"CellState3\"> \r\n        <div className=\"CellState3-Type\"> {this.props.data.type} </div>\r\n        <div className=\"CellState3-Warning\"> Axe must be equipped / More Gold is required </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport CellState0 from './CellState0.Component';\r\nimport CellState1 from './CellState1.Component';\r\nimport CellState2 from './CellState2.Component';\r\nimport CellState3 from './CellState3.Component';\r\n\r\nimport './Cell.css';\r\n\r\nexport default class Cell extends Component  {\r\n  \r\n  // Cell Schema: this.props.data.{class, type, state, progress, found, amountInvested}\r\n  // this.props.key = index of that data in openCells[] // cant use as props\r\n  // this.props.index = index of that data in openCells[] // so use this instead\r\n  // this.props.start = start() mining in App.js\r\n\r\n  render(){\r\n    let cell;\r\n\r\n    switch(this.props.data.state){\r\n      case 0:\r\n        cell = <CellState0 data={this.props.data} index={this.props.index} start={this.props.start} />\r\n        break;\r\n      case 1:\r\n        cell = <CellState1 data={this.props.data} />\r\n        break;\r\n      case 2:\r\n        cell = <CellState2 data={this.props.data} index={this.props.index} collectItems={this.props.collectItems} />\r\n        break;\r\n      case 3:\r\n        cell = <CellState3 data={this.props.data} />\r\n        break;\r\n      default:\r\n        console.log(\"> That State does not exist\");\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"Cell\"> \r\n        {cell}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './AddCell.css';\r\n\r\nexport default class AddCell extends Component{\r\n  render(){\r\n    return (\r\n      <div className=\"AddCell\">   \r\n        <div className=\"AddCellWrapper\"> \r\n          <div className=\"thePlus\" onClick={this.props.openAddMenu} > + </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\n\r\nimport './MineGrid.css';\r\n\r\nimport Cell from './Cell.Component';\r\nimport AddCell from './AddCell.Component';\r\n\r\nexport default class MineGrid extends Component  {\r\n\r\n  //this.props.cellsOpen.[cellData.{class, type, state, progress, found, amountInvested}]\r\n  //this.props.start\r\n  //this.props.collectItems\r\n  //this.props.openAddMenu\r\n  \r\n  getCells(){\r\n    return this.props.cellsOpen.map((cellData, i) => { // Needs to be a arrow function to access this.props (if we use function() then 'this' is binded to that function, not globular)\r\n        return <Cell \r\n        data={cellData} \r\n        key={i}\r\n        index={i}\r\n        start={this.props.start} \r\n        collectItems={this.props.collectItems}\r\n        />;\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"MineGrid\">\r\n        <div className=\"MineGrid-wrapper field\">\r\n         {this.getCells()}\r\n         <div> <AddCell openAddMenu={this.props.openAddMenu} /> </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Asset.css';\r\n\r\nexport default class Tab extends Component  {\r\n\r\n  // Asset = Actual Cell Item e.g. GOLD\r\n  \r\n  // Asset Schema: this.props.data.{type, id, cost, level, amountToInvest}\r\n  // this.props.key\r\n  // this.props.index\r\n  //// this.props.addCell // <div><span className=\" AddAssetButton\" onClick={this.addCell.bind(this, data)}>+</span></div> :: now deprecated\r\n  // this.props.openEnrichMenu\r\n  // this.props.addToCart\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      \r\n    }\r\n  }\r\n\r\n  addCell(data){    \r\n    this.props.addCell(data);\r\n  }\r\n\r\n  selectAsset(){\r\n    this.props.openEnrichMenu();\r\n    this.props.addToCart(this.props.data);\r\n  }\r\n\r\n  render(){\r\n    let data, rowClassNames=\"asset-row\";\r\n    if(this.props.data!==undefined){\r\n        data = this.props.data;\r\n\r\n        if(data.type === \"material\"){\r\n            rowClassNames += \" asset-row-material\"\r\n        }\r\n\r\n        if(data.type === \"estate\"){\r\n            rowClassNames += \" asset-row-estate\"\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div className={rowClassNames}>\r\n          <div className=\"DATA_LEVEL asset-font\">{data.level}</div>\r\n          <div className=\"DATA_ID asset-font\">{data.id}</div>\r\n          <div className=\"DATA_COST asset-font number\">${data.cost}</div>\r\n          <div className=\"SELECT_BUTTON asset-font\"><button onClick={this.selectAsset.bind(this)}> Select </button> </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Tab.css'\r\n\r\nimport Asset from'./Asset.Component';\r\n\r\nexport default class Tab extends Component  {\r\n\r\n  // Tab = SKILL e.g. Material Skill\r\n  \r\n  // this.props.type\r\n  // Asset[] Schema: this.props.assets[].{type, id, cost, level, amountToInvest}\r\n  // this.props.addCell\r\n  // this.props.openEnrichMenu\r\n  // this.props.addToCart\r\n\r\n  getAssets(){\r\n    return this.props.assets.map((assetData, i) => {\r\n        return <Asset \r\n        data={assetData} \r\n        key={i}\r\n        index={i}\r\n        //addCell={this.props.addCell}\r\n        openEnrichMenu={this.props.openEnrichMenu}\r\n        addToCart={this.props.addToCart}\r\n        />;\r\n    });\r\n  }\r\n\r\n  render(){\r\n    let assets;\r\n    if(this.props.assets !== undefined) assets = this.getAssets();\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"tab\"> \r\n          <div className=\"skill\">{this.props.type}</div>\r\n          <div className=\"dropdownArrow\">▾</div>\r\n        </div>\r\n        \r\n        <div className=\"assetList\">\r\n            <div className=\"assetListHeader\">\r\n                <div className=\"asset-row-header\">LEVEL</div>\r\n                <div className=\"asset-row-header\">ASSET</div>\r\n                <div className=\"asset-row-header\">COST</div>\r\n                <div className=\"asset-row-header\"> </div>\r\n            </div>\r\n\r\n            <div>{assets}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './AddMenu.css';\r\n\r\nimport Tab from './Tab.Component';\r\n\r\nexport default class AddMenu extends Component  {\r\n  \r\n  // this.props.userdata.{username, cash, level, cellsOpen, items, assets}\r\n  // this.props.exitAddMenu\r\n  // this.props.addCell\r\n  // this.props.openEnrichMenu\r\n  // this.props.addToCart\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render(){\r\n    let assets = this.props.userdata.assets;\r\n    let materialAssets = [];\r\n    let estateAssets = [];\r\n\r\n    for(let i = 0; i < assets.length; i++){\r\n        switch(assets[i].type){\r\n            case \"material\":\r\n                materialAssets.push(assets[i]);\r\n                break;\r\n            case \"estate\":\r\n                estateAssets.push(assets[i]);\r\n                break;\r\n            default:\r\n                console.log(\">> That Asset Type does not exist\");\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div className=\"AddMenu\"> \r\n        <div className=\"AddMenu-top\">\r\n          <div className=\"title\">My Assets</div>\r\n          <div className=\"exit\" onClick={this.props.exitAddMenu}>✕</div>\r\n        </div>\r\n        \r\n        <div className=\"AddMenu-mid\">  \r\n          <div className=\"mid-table\">\r\n            <div> Current Cash </div>\r\n            <div className=\"number\"> ${this.props.userdata.cash} </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"AddMenu-bot\">\r\n          <Tab \r\n            type=\"History\" \r\n            addCell={this.props.addCell} />\r\n\r\n          <Tab \r\n            type=\"Material Skills\" \r\n            assets={materialAssets} \r\n            //addCell={this.props.addCell}\r\n            openEnrichMenu={this.props.openEnrichMenu}\r\n            addToCart={this.props.addToCart}\r\n            />\r\n\r\n          <Tab \r\n            type=\"Estate Skills\" \r\n            assets={estateAssets} \r\n            //addCell={this.props.addCell}\r\n            openEnrichMenu={this.props.openEnrichMenu}\r\n            addToCart={this.props.addToCart}\r\n            />\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './EnrichMenu.css';\r\n\r\nexport default class EnrichMenu extends Component  {\r\n\r\n  // this.props.userdata.{username, cash, level, cellsOpen, items, assets}\r\n  // this.props.exitEnrichMenu\r\n  // this.props.openAddMenu\r\n  // this.props.removeFromCart\r\n  // this.props.dataList[].{type, id, cost, level, amountToInvest} // will always have 1 item though\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n        amountToInvest: 0\r\n    }\r\n  }\r\n\r\n  addCell(){\r\n    let curr = this.props.dataList[0];\r\n    curr.amountToInvest = this.state.amountToInvest;\r\n    this.props.addCell(curr);\r\n  }\r\n\r\n  plusInvest(){\r\n    let curr = this.state.amountToInvest;\r\n    curr += 1000;\r\n    this.setState({amountToInvest: curr});\r\n  }\r\n\r\n  minusInvest(){\r\n    let curr = this.state.amountToInvest;\r\n    curr -= 1000;\r\n    this.setState({amountToInvest: curr});\r\n  }\r\n\r\n  removeFromCartBACK(){\r\n    this.props.openAddMenu();\r\n    this.props.removeFromCart();\r\n  }\r\n\r\n  removeFromCartEXIT(){\r\n    this.props.exitEnrichMenu();\r\n    this.props.removeFromCart();\r\n  }\r\n\r\n  render(){\r\n    // Setting Default data for initial rendering\r\n    let data = {\r\n        type: 'DEFAULT',\r\n        id: 'DEFAULT',\r\n        cost: 'DEFAULT',\r\n        level: 'DEFAULT',\r\n        amountToInvest: 'DEFAULT'\r\n    };\r\n    // Getting proper data when actually using AddMenu -> EnrichMenu\r\n    if(this.props.dataList.length > 0) data = this.props.dataList[0];\r\n\r\n    // Btn Settings\r\n    let isPlusDisabled;\r\n    let isMinusDisabled;\r\n    if(this.state.amountToInvest <= 100 ) isMinusDisabled = true;\r\n    else isMinusDisabled = false;\r\n    if(this.state.amountToInvest >= this.props.userdata.cash) isPlusDisabled = true;\r\n    else isPlusDisabled = false;\r\n\r\n    return (\r\n      <div className=\"EnrichMenu\"> \r\n        <div className=\"EnrichMenu-Top\">\r\n          <div onClick={this.removeFromCartBACK.bind(this)}> Back </div>\r\n          <div> Adding Asset </div>\r\n          <div onClick={this.removeFromCartEXIT.bind(this)}>✕</div>\r\n        </div>\r\n        <div className=\"EnrichMenu-Mid\">\r\n            <div className=\"EnrichMenu-Mid-currentCash\">\r\n              <div> Current Cash </div>\r\n              <div> ${this.props.userdata.cash} </div>\r\n            </div>\r\n            <div className=\"EnrichMenu-Mid-assetDetails\">\r\n              <div> {data.id} </div>\r\n              <div> Cost to Add: (${data.cost}) </div>\r\n              <div className=\"dummyBox\"> XXX </div>\r\n            </div>\r\n            <div className=\"EnrichMenu-Mid-investAmount\">\r\n              <div> Amount to Invest: </div>\r\n              <div> \r\n                <button onClick={this.minusInvest.bind(this)} disabled={isMinusDisabled}>-</button> \r\n                &nbsp;{this.state.amountToInvest}&nbsp;\r\n                <button onClick={this.plusInvest.bind(this)} disabled={isPlusDisabled}>+</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"EnrichMenu-Mid-AddBtn\"><button onClick={this.addCell.bind(this)}> Add </button></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Main.css';\r\n\r\nimport TitleNav from '../DisplayComponents/TitleNav.Component';\r\nimport DataDisplay from '../GameComponents/DataDisplay.Component';\r\nimport MineGrid from '../GameComponents/MineGrid.Component';\r\nimport AddMenu from '../GameComponents/AddMenu.Component';\r\nimport EnrichMenu from '../GameComponents/EnrichMenu.Component';\r\n\r\nexport default class Main extends Component  {\r\n\r\n  //this.props.openInventory\r\n\r\n  //this.props.userdata.{username, cash, level, cellsOpen, items, assets} \r\n  //this.props.addCell\r\n  //this.props.start\r\n  //this.props.collectItems\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      cart: [],\r\n      isAddMenuOpen: false,\r\n      isEnrichMenuOpen: false\r\n    }\r\n  }\r\n\r\n  removeFromCart(){\r\n    let list = [];\r\n    this.setState({cart: list});\r\n  }\r\n\r\n  addToCart(assetData){\r\n    let list = [];\r\n    list.push(assetData);\r\n    this.setState({cart: list});\r\n  }\r\n\r\n  openEnrichMenu(){\r\n    this.setState({isEnrichMenuOpen: true});\r\n    this.setState({isAddMenuOpen: false});\r\n  }\r\n\r\n  exitEnrichMenu(){\r\n    this.setState({isEnrichMenuOpen: false});\r\n    this.setState({isAddMenuOpen: false});\r\n  }\r\n\r\n  openAddMenu(){\r\n    this.setState({isAddMenuOpen: true});\r\n    this.setState({isEnrichMenuOpen: false});\r\n  }\r\n\r\n  exitAddMenu(){\r\n    this.setState({isAddMenuOpen: false});\r\n    this.setState({isEnrichMenuOpen: false});\r\n  }\r\n\r\n  render(){\r\n    let MainComponentsClassNames = \"MainComponents \";\r\n    let AddMenuComponentClassNames = \"HideAddMenuComponent \";\r\n    let EnrichMenuComponentClassNames= \"HideEnrichMenuComponent \";\r\n    let TitleNavComponentClassNames = \"TitleNavComponent \";\r\n\r\n    if(this.state.isAddMenuOpen){\r\n      EnrichMenuComponentClassNames= \"HideEnrichMenuComponent \";\r\n      MainComponentsClassNames = \"HideMainComponents \";\r\n      AddMenuComponentClassNames = \"AddMenuComponent \";\r\n    }\r\n    else if(this.state.isEnrichMenuOpen){\r\n      MainComponentsClassNames = \"HideMainComponents \";\r\n      AddMenuComponentClassNames = \"HideAddMenuComponent \";\r\n      EnrichMenuComponentClassNames= \"EnrichMenuComponent \";\r\n    }\r\n    else{\r\n      AddMenuComponentClassNames = \"HideAddMenuComponent \";\r\n      EnrichMenuComponentClassNames= \"HideEnrichMenuComponent \";\r\n      MainComponentsClassNames = \"MainComponents \";\r\n    }\r\n\r\n    return (\r\n      <div className=\"Main\">\r\n        <div className={TitleNavComponentClassNames}>\r\n          <TitleNav \r\n          />\r\n        </div>\r\n\r\n        <div className={MainComponentsClassNames}>\r\n          <DataDisplay \r\n          cash={this.props.userdata.cash}\r\n          />\r\n          \r\n          <MineGrid \r\n          cellsOpen={this.props.userdata.cellsOpen}\r\n          start={this.props.start}\r\n          collectItems={this.props.collectItems}\r\n          openAddMenu={this.openAddMenu.bind(this)}\r\n          />\r\n        </div>\r\n\r\n        <div className={AddMenuComponentClassNames}>\r\n          <AddMenu\r\n          userdata={this.props.userdata}\r\n          exitAddMenu={this.exitAddMenu.bind(this)}\r\n          //addCell={this.props.addCell}\r\n          openEnrichMenu={this.openEnrichMenu.bind(this)}\r\n          addToCart={this.addToCart.bind(this)}\r\n          />\r\n        </div>\r\n\r\n        <div className={EnrichMenuComponentClassNames}>\r\n          <EnrichMenu\r\n          userdata={this.props.userdata}\r\n          exitEnrichMenu={this.exitEnrichMenu.bind(this)}\r\n          openAddMenu={this.openAddMenu.bind(this)}\r\n          removeFromCart={this.removeFromCart.bind(this)}\r\n          dataList={this.state.cart}\r\n          addCell={this.props.addCell}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './BannerTitle.css';\r\n\r\nexport default function BannerTitle() {\r\n    return (\r\n      <div className=\"BannerTitle\">\r\n        <ul className=\"BannerTitle-ul\">\r\n            <li className=\"BannerTitle-letter\">I</li>\r\n            <li className=\"BannerTitle-letter\">N</li>\r\n            <li className=\"BannerTitle-letter\">V</li>\r\n            <li className=\"BannerTitle-letter\">E</li>\r\n            <li className=\"BannerTitle-letter\">N</li>\r\n            <li className=\"BannerTitle-letter\">T</li>\r\n            <li className=\"BannerTitle-letter\">O</li>\r\n            <li className=\"BannerTitle-letter\">R</li>\r\n            <li className=\"BannerTitle-letter\">Y</li>\r\n        </ul>\r\n      </div>\r\n    ); \r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Cash.css';\r\n\r\n// this.props.userdata.{data, username, cash, level, cellsOpen, items}\r\n\r\nexport default class Cash extends Component  {\r\n  render(){\r\n    return (\r\n      <div className=\"Cash\">\r\n        Cash ${this.props.userdata.cash}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './Tile.css';\r\n\r\n// this.props.tileData.{id, quantity}\r\n\r\nexport default class Tile extends Component  {\r\n  render(){\r\n    return (\r\n      <div className=\"Tile\">\r\n        <div className=\"item-name\"> {this.props.tileData.id} </div>\r\n        <div className=\"item-amount\"> {this.props.tileData.quantity} </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './TileGrid.css';\r\n\r\nimport Tile from './Tile.Component';\r\n\r\n// this.props.userdata.{data, username, cash, level, cellsOpen, items}\r\n\r\nexport default class TileGrid extends Component  {\r\n\r\n  getTiles(){\r\n    return this.props.userdata.items.map((tileData, i) => {\r\n        return <Tile\r\n        tileData={tileData}\r\n        key={i}\r\n        index={i}\r\n        />\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"TileGrid\">\r\n        <div className=\"TileGridTitle\"> Items  | Total {this.props.userdata.items.length}</div>\r\n        {this.getTiles()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport TitleNav from '../DisplayComponents/TitleNav.Component';\r\nimport BannerTitle from '../InventoryComponents/BannerTitle.Component';\r\nimport Cash from '../InventoryComponents/Cash.Component';\r\nimport TileGrid from '../InventoryComponents/TileGrid.Component';\r\n\r\n// this.props.userdata = {data, username, cash, level, cellsOpen, items}\r\n\r\nexport default class Inventory extends Component  {\r\n  render(){\r\n    return (\r\n      <div className=\"Inventory\">\r\n        <TitleNav page={\"Inventory\"}/>\r\n        <BannerTitle />\r\n        <Cash userdata={this.props.userdata} />\r\n        <TileGrid userdata={this.props.userdata} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","function getUserData2(){\r\n    let data = {\r\n        username: \"ambushnike\",\r\n        cash: 10000,\r\n        level: 1,\r\n        cellsOpen: [],\r\n        items: [],\r\n        assets: []\r\n    };\r\n\r\n    data.items = getMockItems();\r\n    data.assets = getMockAssets();\r\n\r\n    return data;\r\n}\r\n\r\nfunction getMockItems(){\r\n    let temp = [];\r\n\r\n    temp.push({\r\n        id: \"GOLD\",\r\n        quantity: 0\r\n    });\r\n    \r\n    temp.push({\r\n        id: \"WWWW\",\r\n        quantity: 500\r\n    });\r\n\r\n    temp.push({\r\n        id: \"OOOO\",\r\n        quantity: 20\r\n    });\r\n\r\n    temp.push({\r\n        id: \"TSLA\",\r\n        quantity: 1\r\n    });\r\n\r\n    temp.push({\r\n        id: \"C\",\r\n        quantity: 0\r\n    });\r\n    \r\n    temp.push({\r\n        id: \"COS\",\r\n        quantity: 327\r\n    });\r\n\r\n    temp.push({\r\n        id: \"FB\",\r\n        quantity: \"75m\"\r\n    });\r\n\r\n    temp.push({\r\n        id: \"NFLX\",\r\n        quantity: \"890k\"\r\n    });\r\n\r\n    return temp;\r\n}\r\n\r\nfunction getMockAssets(){\r\n    let temp = [];\r\n\r\n    temp.push({\r\n        type: \"material\",\r\n        id: \"GOLD\",\r\n        cost: 200,\r\n        level: 1,\r\n        amountToInvest: 0\r\n    });\r\n\r\n    temp.push({\r\n        type: \"material\",\r\n        id: \"COS\",\r\n        cost: 9000,\r\n        level: 12,\r\n        amountToInvest: 0\r\n    });\r\n\r\n    temp.push({\r\n        type: \"estate\",\r\n        id: \"HOME\",\r\n        cost: 36000,\r\n        level: 1,\r\n        amountToInvest: 0\r\n    });\r\n\r\n    temp.push({\r\n        type: \"estate\",\r\n        id: \"RESO\",\r\n        cost: 375000,\r\n        level: 102,\r\n        amountToInvest: 0\r\n    });\r\n\r\n    return temp;\r\n}\r\n\r\nexport default getUserData2;","import React, {Component} from 'react';\nimport './App.css';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from './ScreenComponents/Main.Component';\nimport Inventory from './ScreenComponents/Inventory.Component';\n\n// Mock Data\nimport getUserData from './MockData/user1';\nimport getUserData2 from './MockData/user2';\n\nexport default class App extends Component  {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      userdata: getUserData2()\n    }\n  }\n\n  async start(index, price){\n    let currUserData = this.state.userdata;\n\n    // Pay price to do a mining job\n    currUserData.cash -= price;\n\n    // Mining state so set to state 1\n    currUserData.cellsOpen[index].state = 1;\n     \n    //// Support Function for mock scenario\n    let sleep = (ms) => {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    //// Mocking a mining scenario\n    for (let i = 0; i <= 100; i++) {\n        if (i !== 0) await sleep(10); //@TODO Random Time Range for WOOD\n        currUserData.cellsOpen[index].progress = i;\n        currUserData.cellsOpen[index].found = i*8; // @TODO Random Num Range for WOOD\n        this.setState({userdata: currUserData});\n    }\n\n    // Finnished mining so set state to 2\n    currUserData.cellsOpen[index].state = 2;\n    this.setState({userdata: currUserData});\n  }\n\n  addCell(data){\n    // Asset Schema: data.{type, id, cost, level, amountToInvest}\n    let currUserData = this.state.userdata;\n\n    currUserData.cellsOpen.push({\n      type: data.id,\n      state: 0,\n      progress: 0,\n      found: 0,\n      amountInvested: data.amountToInvest\n    });\n\n    currUserData.cash -= data.cost;\n    \n    this.setState({userdata: currUserData});\n  }\n\n  collectItems(index, name, value){\n    // Add value to inventory items to that item, 'name'\n    let currUserData = this.state.userdata;\n    let currUserItems = currUserData.items;\n\n    for(let i = 0; i < currUserItems.length; i++){\n      if(currUserItems[i].id === name) currUserItems[i].quantity += value;\n    }\n\n    // Reset index cell to state 0\n    let currUserCellsOpen = currUserData.cellsOpen;\n    currUserCellsOpen[index].state = 0;\n\n    // Update App state with new user details\n    this.setState({userdata: currUserData});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <Switch>\n\n            <Route \n            exact path='/' \n            component={ \n              () => \n              <Main \n              userdata={this.state.userdata} \n              start={this.start.bind(this)}\n              collectItems={this.collectItems.bind(this)}\n              addCell={this.addCell.bind(this)} \n              /> \n            } \n            />\n\n            <Route \n            exact path='/inventory' \n            component={ \n              () => \n              <Inventory \n              userdata={this.state.userdata}\n              /> \n            } \n            />\n\n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}